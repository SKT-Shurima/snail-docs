import{_ as s,o as a,c as l,U as n}from"./chunks/framework.835c9fd2.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Nginx/Rewrite.md","filePath":"Nginx/Rewrite.md","lastUpdated":1632912264000}'),t={name:"Nginx/Rewrite.md"},e=n(`<h3 id="rewrite" tabindex="-1">Rewrite <a class="header-anchor" href="#rewrite" aria-label="Permalink to &quot;Rewrite&quot;">​</a></h3><ul><li><p>地址重写：实现地址的标准化；</p></li><li><p>地址转发：指讲一个域名指到另一个已有站点的过程；</p><p>区别：</p><table><thead><tr><th>地址转发</th><th>地址重写</th></tr></thead><tbody><tr><td>地址转发后，客户端地址栏的地址显示是不变的</td><td>地址重新后，客户端地址栏中的地址改变为服务器选择确定的地址</td></tr><tr><td>地址转发只有一次网络请求</td><td>地址重新会产生两次</td></tr><tr><td>地址转发发生在同一站点项目内</td><td>没有限制</td></tr><tr><td>转发后的页面可以不用全路径名表示</td><td>必须使用完整的路径名表示</td></tr><tr><td>转发过程中，可以将客户端请求的 request 范围内属性传递给新的页面</td><td>Not Allow</td></tr><tr><td>转发的速度比地址重定向要快</td><td></td></tr></tbody></table></li></ul><h3 id="rewrite-规则" tabindex="-1">Rewrite 规则 <a class="header-anchor" href="#rewrite-规则" aria-label="Permalink to &quot;Rewrite 规则&quot;">​</a></h3><ul><li><p>if 指令</p><p>该指令用来支持条件判断，并根据条件判断结果选择不同的 Nginx 配置，可以在 server 、location 块中配置该指令，其语法结构为;</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (condition) </span><span style="color:#F07178;">{...}</span></span></code></pre></div><ul><li><p>变量名：如果变量的值为空字符串或者以“0”开头的任意字符串，if 指令认为条件为 false，其他情况认为条件为 true；比如：</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">slow) </span><span style="color:#F07178;">{...}</span></span></code></pre></div></li><li><p>“=” “!=” 比较变量和字符串是否相等，相等时 if 指令认为条件为 true， 反之为 false；</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">request_method </span><span style="color:#89DDFF;">= </span><span style="color:#A6ACCD;">POST) </span><span style="color:#F07178;">{ </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">405</span><span style="color:#F07178;">;}</span></span></code></pre></div><p>注意：字符串不需要加引号；</p></li><li><p>使用正则表达式对变量进行匹配，变量与正则表达式之间用“~”、“~* ”、“!~”、“!~*” 连接；</p><ul><li>“~”：表示匹配过程中对大小写敏感；</li><li>“~*”：表示匹配过程中对大小写不敏感；</li><li>“!~”：匹配失败时，if 指令认为条件为 true；反之为 false；</li></ul><p>在正则表达式中，可以使用小括号对变量值进行截取，在花括号中使用$1...$9引用截取的部分；</p><div class="language-NGINX"><button title="Copy Code" class="copy"></button><span class="lang">NGINX</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">http_user_agent </span><span style="color:#89DDFF;">~ </span><span style="color:#A6ACCD;">MSIE) </span><span style="color:#F07178;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;"># $http_user_agent 的值中是否含有 MISE 字符串，如果包含，为 true</span></span>
<span class="line"><span style="color:#F07178;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">if($</span><span style="color:#89DDFF;">http_cookie</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">~*</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&quot;id=([^;]+)(?:;|$)&quot;</span><span style="color:#A6ACCD;">) {</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># Nginx 配置，可以使用 $1 和 $2 获取截取到的值，如：</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># set $id $1; 将截取到的id 赋值给 $id 变量以备后用；</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><p>注意： 整个正则表达式字符串一般不需要加引号，但如果含有花括号“{”、“;” 字符时，必须要给整个正则表达式添加引号；</p></li><li><p>判断请求文件是否存在使用 &quot;-f&quot; 、&quot;!-f&quot;</p><ul><li><p>&quot;-f&quot; ：如果请求的文件存在，if 指令认为条件为 true，请求文件不存在返回 false； 只判断文件是否存在；</p></li><li><p>&quot;!-f&quot;：如果请求的文件不存在但该文件所在的目录存在，if 指令认为条件为true；如果该文件和它所在的目录都不存在，则为false，如果请求的文件存在，也为 false；判断请求的文件是否不存在；</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">if(-</span><span style="color:#89DDFF;">f</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">request_filename){</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># 判断请求的文件是否存在</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">if(!-</span><span style="color:#89DDFF;">f</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">request_filename){</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># 判断请求的文件是否不存在</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div></li></ul></li></ul></li></ul>`,4),p=[e];function o(i,r,c,d,y,C){return a(),l("div",null,p)}const A=s(t,[["render",o]]);export{u as __pageData,A as default};
