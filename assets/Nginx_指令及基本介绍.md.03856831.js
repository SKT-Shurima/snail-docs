import{_ as s,o as n,c as a,U as l}from"./chunks/framework.835c9fd2.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Nginx/指令及基本介绍.md","filePath":"Nginx/指令及基本介绍.md","lastUpdated":1632912264000}'),e={name:"Nginx/指令及基本介绍.md"},p=l(`<h3 id="nginx-命令" tabindex="-1">Nginx 命令： <a class="header-anchor" href="#nginx-命令" aria-label="Permalink to &quot;Nginx 命令：&quot;">​</a></h3><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$ </span><span style="color:#89DDFF;">nginx</span><span style="color:#A6ACCD;"> -t  // 查看Nginx服务器配置文件是否有语法错误</span></span></code></pre></div><h3 id="nginx-conf-原始配置文件" tabindex="-1">Nginx.conf 原始配置文件 <a class="header-anchor" href="#nginx-conf-原始配置文件" aria-label="Permalink to &quot;Nginx.conf  原始配置文件&quot;">​</a></h3><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># nginx.conf 原始文件</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># ******* 全局块 start ********</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 只有被设置的用户组成员才有权限启动Nginx进程</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># user nobody</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 全局生效，配置允许 Nginx 进程生成的 worker_process 数量</span></span>
<span class="line"><span style="color:#89DDFF;">worker_processes </span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 配置 Nginx 服务器运行对错误日志存放的路径</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># error_log logs/error.log</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 配置 Nginx 运行时，pid 文件存放路径和名称；</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># pid nginx.pid</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># ******* 全局块 end ********</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># ******* events start ********</span></span>
<span class="line"><span style="color:#C792EA;">events</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;"># 配置事件驱动模型</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;"># use epoll;</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;"># 在events部分中生效</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> worker_connections </span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1024</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># ******* events end ********</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># ******* http start ********</span></span>
<span class="line"><span style="color:#C792EA;">http</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;"> 		</span><span style="color:#676E95;font-style:italic;"># 以下指令在http的server部分中生效</span></span>
<span class="line"><span style="color:#A6ACCD;"> 		</span><span style="color:#676E95;font-style:italic;"># 定义 MIME-Type</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> include </span><span style="color:#A6ACCD;">      mime.types</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">   </span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> default_type </span><span style="color:#A6ACCD;"> application/octet-stream</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 配置允许使用sendfile 方式传输</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> sendfile </span><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;"> on;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 配置连接超时时间</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> keepalive_timeout </span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">65</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 配置请求处理日志的格式</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># log_format access.log &#39;$remote_addr-[$time_local]-&quot;$request&quot;-&quot;$http_user_agent&quot;&#39;;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 请求行+请求头的标准大小为1k</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># client_header_buffer_size 1k;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 请求行+请求头的最大大小为2k</span></span>
<span class="line"><span style="color:#A6ACCD;">	  </span><span style="color:#676E95;font-style:italic;"># large_client_header_buffers 2 1k;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># ******* server start ********</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">    		</span><span style="color:#676E95;font-style:italic;"># 配置监听端口和主机名称（基于名称）</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">      </span><span style="color:#F78C6C;">8080</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;"> localhost</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># 配置请求处理日志存放路径</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># access_log /myweb/server1/log/access.log</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/ </span><span style="color:#A6ACCD;">{            </span><span style="color:#676E95;font-style:italic;"># 以下指令在http/server 的location 中生效 </span></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> root </span><span style="color:#A6ACCD;">  html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> index </span><span style="color:#A6ACCD;"> index.html index.htm</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        }</span></span>
<span class="line"><span style="color:#A6ACCD;">			 </span><span style="color:#676E95;font-style:italic;"># 配置错误页面</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> error_page </span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">500</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">502</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">503</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">504</span><span style="color:#A6ACCD;">  /50x.html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/50x.html </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> root </span><span style="color:#A6ACCD;">  html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># ******* server end ********</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># ******* http end ********</span></span></code></pre></div><p>注意：Nginx 配置文件中，每一条指令配置都必须以分号结束；</p><p>结构划分：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">├───nginx.conf</span></span>
<span class="line"><span style="color:#A6ACCD;">│   ├───全局块</span></span>
<span class="line"><span style="color:#A6ACCD;">│   ├───events</span></span>
<span class="line"><span style="color:#A6ACCD;">│   ├───http</span></span>
<span class="line"><span style="color:#A6ACCD;">│   │   ├───server</span></span>
<span class="line"><span style="color:#A6ACCD;">│   │   │   ├───server 全局块</span></span>
<span class="line"><span style="color:#A6ACCD;">│   │   │   ├───location</span></span>
<span class="line"><span style="color:#A6ACCD;">│   │   │   ├───location</span></span></code></pre></div><p>注意：</p><ul><li><p>配置文件支持大量可配置的指令，绝大多数指令不是特定属于某一个块的；</p></li><li><p>同一个指令放在不同层级的块中，其作用域也不同，一般情况下，高一级块中的指令可以作用于自身所在的块和此块包含的所有低层级块；如果某个指令在两个不同层级的块中同时出现，则采用“就近原则”，即较低层级块中的配置为准；</p><p><em>（即：高层级块能出现在本级及以下的层级块中，并且以最小层级的配置为准）</em></p></li></ul><h4 id="指令说明" tabindex="-1">指令说明 <a class="header-anchor" href="#指令说明" aria-label="Permalink to &quot;指令说明&quot;">​</a></h4><ul><li><p>user [user] [group];</p><p>只有被设置的用户组成员才有权限启动Nginx进程；</p><p>如果希望所有的用户都可以启动Nginx，有两种方案：</p><ul><li>注释 <code># user [user] [group]</code>;</li><li>或者将用户（用户组）设置为<code>nobody</code>，<code>user nobody nobody</code>;</li></ul></li><li><p>worker process，理论上，值越大可以支持的并发处理量就越多； 配置允许生成的 worker process 数的指令是 <code>worker_processes</code></p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">worker_processes </span><span style="color:#A6ACCD;">number | auto</span></span></code></pre></div><ul><li>number ，指定 Nginx 进程最多可以产生的 worker process 数；</li><li>auto， Nginx 进程将自动进行检测；</li></ul><p>注意： 此指令只能在全局块中设置。</p></li><li><p>Nginx 进程 PID 存放路径</p><p>配置文件默认存放在Nginx安装目录logs下，修改语法：</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">pid </span><span style="color:#A6ACCD;">file</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>file 指定存放路径和文件名称，必须带文件名称；</p><p>注意：此指令只能在全局块中使用；</p></li><li><p>配置错误日志的存放路径</p><p>在全局块、http块、sever块中都可以对Nginx服务器的日志进行相关配置；</p><p>指令<code>error_log</code>，语法：</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">error_log </span><span style="color:#A6ACCD;">file | stderr [</span><span style="color:#89DDFF;"> debug</span><span style="color:#A6ACCD;"> | info |</span><span style="color:#89DDFF;"> notice</span><span style="color:#A6ACCD;"> |</span><span style="color:#89DDFF;"> warn</span><span style="color:#A6ACCD;"> |</span><span style="color:#89DDFF;"> error</span><span style="color:#A6ACCD;"> |</span><span style="color:#89DDFF;"> crit</span><span style="color:#A6ACCD;"> | alert | emerg ]</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>Nginx 服务日志支持输出到某个文件下，或者输出到标准错误输出stderr；</p><p>日志等级：</p><ul><li>debug （需要在编译时使用 --with-debug 开启 debug 开关）</li><li>info</li><li>notice</li><li>warn</li><li>error</li><li>crit</li><li>alert</li><li>emerg</li></ul><p>注意：设置某一级别，比这一级别高的日志也会被记录；指定文件必须有写的权限；</p><p>此指令能在全局块、http、server、location块中使用；</p></li><li><p>配置文件的引入</p><p>Nginx 提供 <code>include</code> 指令来完成配置文件的引入，语法结构：</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">include </span><span style="color:#A6ACCD;">file</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>file 是要引入的配置文件，支持相对路径；</p><p>注意：引入的文件，必须有写的权限，并且符合Nginx配置文件规定的相关语法和结构；</p><p>此指令可以放在配置文件的任意地方；</p></li><li><p>配置最大连接数</p><p>指令worker_connections 主要用来设置允许每一个 worker process 同时开启最大连接数；</p><p>语法结构：</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">worker_connections </span><span style="color:#A6ACCD;">number</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>注意：number 不仅指和前端用户建立的连接数，而是包括所有可能的连接数；</p><p>此指令只能在events中配置，且默认是512；</p></li><li><p>自定义服务日志</p><p>语法结构：</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">access_log </span><span style="color:#A6ACCD;">path [format [buffer=size]]</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>取消服务日志功能指令：</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">access_log </span><span style="color:#A6ACCD;">off</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>此指令只能在http块中进行配置；</p></li><li><p>配置允许sendfile 方式传输文件</p><p>语法结构：</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">sendfile </span><span style="color:#A6ACCD;">on|off</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>用于开启或关闭使用sendfile()传输文件，默认值是off;</p><p>传输文件大小限制，语法结构：</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">sendfile_max_chunk </span><span style="color:#A6ACCD;">size</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>size &gt; 0 ，表示Nginx进程的每个worker process 每次调用sendfile() 传输的数据量最大不能超过这个值；</p><p>size = 0，表示无限制；</p><p>此指令可以在 http、server、location 块中配置；</p></li><li><p>配置连接超时时间</p><p>语法结构：</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">keepalive_timeout </span><span style="color:#A6ACCD;">timeout [header_timeout]</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>timeout，服务端对连接得保持时间，默认是75s；</li><li>header_timeout，可选项，在应答报文头部的 Keep-Alive 域设置超时时间；</li></ul><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">keepalive_timeout </span><span style="color:#A6ACCD;">120s </span><span style="color:#F78C6C;">100s</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>表达含义是，在服务端保持连接的时间设置为120s，发给用户端的应答报文头部中 Keep-Alive 域的超时时间设置为100s；</p><p>此指令可以在http、server、location块中配置；</p></li><li><p>单连接请求数上限</p><p>Nginx服务器和用户端建立会话连接后，用户端通过此连接发送请求，指令keepalive_requests 用于限制用户通过某一连接向Nginx服务器发送请求的次数；默认是100；</p><p>语法结构：</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">keepalive_requests </span><span style="color:#A6ACCD;">number</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>此指令可以在http、server、location中配置；</p></li><li><p>client_header_buffer_size、large_client_header_buffers</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">client_header_buffer_size </span><span style="color:#A6ACCD;">1k</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>假设<code>client_header_buffer_size</code>设置为 1k，表示 <em>请求行+请求头</em> 的大小 &lt; 1k，放行请求，&gt;= 1k，以 <code>large_header_buffer_size</code>为准；</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">large_header_buffer_sizes</span><span style="color:#A6ACCD;"> 4 </span><span style="color:#F78C6C;">8k</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>假设 <code>large_header_buffer_size</code>的配置为 4 8k，则对请求的要求：</p><ul><li>请求行（requests line）的大小不能超过 8k，否则返回 414 错误；</li><li>请求头 （requests header）的每一个头部字段的大小不能超过 8k ，否则返回 404 错误 <code>curl -H &quot;header1=aaa&quot; -H &quot;header2=bbb&quot; -v http://127.0.0.1/</code>，这里的 header1=aaa 和 header2=bbb 就是请求头中的头部字段</li><li><em>请求头+请求行</em> 的大小不能超过 32K (4*8k)；</li></ul></li><li><p>基于名称的虚拟主机配置</p><p>语法结构：</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">server_name </span><span style="color:#A6ACCD;">name ...</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>name：可以只有一个名称，也可以多个并列，之间用空格隔开；每个名字就是个域名，有两段或三段组成，之间由“.” 隔开；</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">server_name </span><span style="color:#A6ACCD;">myserver.com www.myserver.com</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>第一个名称作为虚拟主机的主要名称；</p><p><code>server_name</code> 匹配规则优先级顺序：</p><ol><li>准确匹配<code>server_name</code> ，如：<code>server_name www.myserver.com</code>；</li><li>通配符在开始时匹配<code>server_name</code>成功，如：<code>server_name *.myserver.com</code>；</li><li>通配符在结束时匹配<code>server_name</code>成功，如：<code>server_name www.myserver.*</code>；</li><li>正则表达式匹配<code>server_name</code>成功，如：<code>server_name ~^www\\d+\\.myserver.\\com$</code>；<em>（ps：正则表达式用“~”标记）</em></li></ol><p>注意：<code>server_name</code>处于统一优先级的匹配方式多次成功，则首次匹配成功的虚拟机处理请求；</p></li><li><p>location</p><p>语法结构：</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">[ = | ~ | ~* | ^~ ] uri</span><span style="color:#A6ACCD;">{...};</span></span></code></pre></div><ul><li>= ： 表示严格匹配；</li><li>~ ：用于表示 uri 包含的正则表达式，并区分大小写；</li><li>~* ：用于表示 uri 包含的正则表达式，并不区分大小写；</li></ul></li><li><p>配置请求根目录</p><p>语法结构：</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">root </span><span style="color:#A6ACCD;">path</span><span style="color:#89DDFF;">;</span></span></code></pre></div></li><li><p>更改 location 的 URI</p><p>语法结构：</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">alias </span><span style="color:#A6ACCD;">path</span><span style="color:#89DDFF;">;</span></span></code></pre></div></li><li><p>设置网站的默认首页</p><p>语法结构：</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">index </span><span style="color:#A6ACCD;">file ...</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>其中 file 变量可以包括多个文件名，其他使用空格分隔，也可以包含其他变量；</p><p>例如：</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">~^/data/(.+)/web$ </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#89DDFF;">	index </span><span style="color:#A6ACCD;">index.</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">1.html  index.my01.html index.html</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><p>其中 <code>~</code> 开头的表示正则匹配，<code>(.+)</code> 表示变量，即当接收到 &quot;/data/locationtest/web/&quot;时，会依次匹配 /data/locationtest/web/ 路径下的 index.locationtest.html、index.my01.html、index.html 页面；</p></li><li><p>设置网站的错误页面 <a href="./../HTTP/常见错误码.html">HTTP 常见错误码</a></p><p>语法结构：</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">error_page </span><span style="color:#A6ACCD;">code ... [=[response]] uri</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>code ：要处理的HTTP 错误码；</li><li>response：可选，将 code 指定的错误码转换为新的错误代码 response；</li><li>uri：错误页面的路径或者网站地址，可以是相对路径（相对Nginx安装路径下的html目录为根路径的相对路径），可以说是网址；</li></ul></li><li><p>基于 IP 配置 Nginx 的访问权限</p><p>允许指令：</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">allow </span><span style="color:#A6ACCD;">address | CIDR |</span><span style="color:#89DDFF;"> all;</span></span></code></pre></div><ul><li>address：允许访问客户端的 IP ，不支持同事设置多个，如果需要设置多个需要重复使用 allow；</li><li>CIDR：允许访问的客户端的 CIDR 地址；</li><li>all：代表允许所有客户端访问；</li></ul><p>禁止访问指令：</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">deny </span><span style="color:#A6ACCD;">address | CIDR |</span><span style="color:#89DDFF;"> all;</span></span></code></pre></div><p>此指令可以在http、server、location中配置；</p></li><li><p>基于密码配置 Nginx 的访问权限</p><p>语法结构：</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">auth_basic </span><span style="color:#A6ACCD;"> string |</span><span style="color:#89DDFF;"> off;</span></span></code></pre></div><ul><li>string：开启该认证功能，用于配置验证时的指示信息；</li><li>off：关闭该认证功能；</li></ul><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">auth_basic_user_file </span><span style="color:#A6ACCD;">file</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>其中，file 为密码文件的绝对路径；</p></li></ul>`,11),o=[p];function t(c,i,r,y,C,d){return n(),a("div",null,o)}const A=s(e,[["render",t]]);export{g as __pageData,A as default};
