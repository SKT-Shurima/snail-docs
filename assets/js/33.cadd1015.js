(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{391:function(a,t,v){"use strict";v.r(t);var l=v(46),r=Object(l.a)({},(function(){var a=this,t=a.$createElement,v=a._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[v("h1",{attrs:{id:"java-基本概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java-基本概念"}},[a._v("#")]),a._v(" Java 基本概念")]),a._v(" "),v("h3",{attrs:{id:"函数与方法的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#函数与方法的区别"}},[a._v("#")]),a._v(" 函数与方法的区别")]),a._v(" "),v("p",[a._v("函数”是一段实现某种“功能”的代码，函数的操作是对输入数据的处理。函数的英文“function”恰恰有“功能”的含义，可以达到“见名知意”。通过函数的名称来实施函数调用。它能将一些数据（也就是参数）传递进去进行处理，然后返回一些数据（即函数的返回值），也可以没有返回值。所有传递给函数的数据都是显式传递的。而方法的参数传递通常是隐式的，它可以直接操作类内部的数据。")]),a._v(" "),v("p",[a._v("“方法”也是一段完成某项功能的代码，也通过名字来进行调用，但它依赖于某个特定的对象，例如，我们可以说“调用对象X的Y方法”，而不能“调用Y方法”。简单来讲， 方法和对象相关；而函数和对象无关。因为Java是一门完全面向对象编程的语言，所以在Java里只有方法。")]),a._v(" "),v("h3",{attrs:{id:"数据类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[a._v("#")]),a._v(" 数据类型")]),a._v(" "),v("ul",[v("li",[a._v("基本数据类型\n"),v("ul",[v("li",[a._v("数值型\n"),v("ul",[v("li",[a._v("整数类型 (byte/short/int/long)")]),a._v(" "),v("li",[a._v("浮点类型 (float/double)")])])]),a._v(" "),v("li",[a._v("字符型 (char)")]),a._v(" "),v("li",[a._v("布尔型 (boolean)")])])]),a._v(" "),v("li",[a._v("引用数据类型\n"),v("ul",[v("li",[a._v("类 (class)")]),a._v(" "),v("li",[a._v("接口 (interface)")]),a._v(" "),v("li",[a._v("数组 (array)")])])])])])}),[],!1,null,null,null);t.default=r.exports}}]);