import{_ as a,o as e,c as l,U as t}from"./chunks/framework.835c9fd2.js";const v=JSON.parse('{"title":"Java 基本概念","description":"","frontmatter":{},"headers":[],"relativePath":"Java/Java 基本概念.md","filePath":"Java/Java 基本概念.md","lastUpdated":1632912264000}'),i={name:"Java/Java 基本概念.md"},o=t('<h1 id="java-基本概念" tabindex="-1">Java 基本概念 <a class="header-anchor" href="#java-基本概念" aria-label="Permalink to &quot;Java 基本概念&quot;">​</a></h1><h3 id="函数与方法的区别" tabindex="-1">函数与方法的区别 <a class="header-anchor" href="#函数与方法的区别" aria-label="Permalink to &quot;函数与方法的区别&quot;">​</a></h3><p>函数”是一段实现某种“功能”的代码，函数的操作是对输入数据的处理。函数的英文“function”恰恰有“功能”的含义，可以达到“见名知意”。通过函数的名称来实施函数调用。它能将一些数据（也就是参数）传递进去进行处理，然后返回一些数据（即函数的返回值），也可以没有返回值。所有传递给函数的数据都是显式传递的。而方法的参数传递通常是隐式的，它可以直接操作类内部的数据。</p><p>“方法”也是一段完成某项功能的代码，也通过名字来进行调用，但它依赖于某个特定的对象，例如，我们可以说“调用对象X的Y方法”，而不能“调用Y方法”。简单来讲， 方法和对象相关；而函数和对象无关。因为Java是一门完全面向对象编程的语言，所以在Java里只有方法。</p><h3 id="数据类型" tabindex="-1">数据类型 <a class="header-anchor" href="#数据类型" aria-label="Permalink to &quot;数据类型&quot;">​</a></h3><ul><li>基本数据类型 <ul><li>数值型 <ul><li>整数类型 (byte/short/int/long)</li><li>浮点类型 (float/double)</li></ul></li><li>字符型 (char)</li><li>布尔型 (boolean)</li></ul></li><li>引用数据类型 <ul><li>类 (class)</li><li>接口 (interface)</li><li>数组 (array)</li></ul></li></ul>',6),r=[o];function n(_,s,c,d,h,u){return e(),l("div",null,r)}const f=a(i,[["render",n]]);export{v as __pageData,f as default};
